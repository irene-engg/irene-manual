name: Build and Push Docker Images

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: "ca-central-1"
      BACKEND_REPO_URI: "688567298614.dkr.ecr.ca-central-1.amazonaws.com/irene-backend"
      FRONTEND_REPO_URI: "688567298614.dkr.ecr.ca-central-1.amazonaws.com/irene-frontend"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $BACKEND_REPO_URI
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $FRONTEND_REPO_URI

      - name: Get image tag
        id: vars
        run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker images
        run: |
          docker build -t $BACKEND_REPO_URI:$IMAGE_TAG ./backend
          docker build -t $FRONTEND_REPO_URI:$IMAGE_TAG ./frontend

      - name: Push Docker images to ECR
        run: |
          docker push $BACKEND_REPO_URI:$IMAGE_TAG
          docker push $FRONTEND_REPO_URI:$IMAGE_TAG

      - name: Create imagedefinitions.json
        run: |
          echo '[
            {
              "name": "irene-backend",
              "imageUri": "'$BACKEND_REPO_URI:$IMAGE_TAG'"
            },
            {
              "name": "irene-frontend",
              "imageUri": "'$FRONTEND_REPO_URI:$IMAGE_TAG'"
            }
          ]' > imagedefinitions.json

      - name: Upload imagedefinitions.json as artifact
        uses: actions/upload-artifact@v3
        with:
          name: imagedefinitions
          path: imagedefinitions.json
